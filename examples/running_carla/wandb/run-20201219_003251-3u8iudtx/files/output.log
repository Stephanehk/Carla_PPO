torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
torch.Size([1, 3468])
torch.Size([1, 8])
Episode reward: 4.209676345380863e-17
Percept compleyed: 0.9925692951175706
2
[59, 8]
torch.Size([59, 3468])
torch.Size([1, 59, 8])
Traceback (most recent call last):
  File "run_ppo_navigation.py", line 447, in <module>
    main(**vars(parser.parse_args()))
  File "run_ppo_navigation.py", line 436, in main
    train_PPO(host,world_port)
  File "run_ppo_navigation.py", line 414, in train_PPO
    current_action_log_probs, state_values, entropies = policy.get_training_params(eps_frames,eps_mes,actions)
  File "run_ppo_navigation.py", line 296, in get_training_params
    mean = self.actor(frame,mes)
  File "run_ppo_navigation.py", line 253, in actor
    X = torch.cat((vec,mes),1)
RuntimeError: Tensors must have same number of dimensions: got 2 and 3
